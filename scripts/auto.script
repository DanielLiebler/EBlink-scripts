//! Auto
/////////////////////////////////////////////////////
//
//
//  This is a virtual device and will try to detect the
//  connected cortex-m vendor.
//
//  All the called vendor specific scripts don't depend on this
//  script and can also be called directly to skip vendor detection.
//

/////////////////////////////////////////////////////
//
//  The entry point for this script
//
function main()
{
    //============================================================
    // ==== ATmel  cortex-M
    {
        try{
            // Load the vendor script and go from there
            require("atmel-auto.script")
            findAtmelDevice()
            return ERROR_OK
        }
        catch(e)
        {
            if(e == ERROR_NOTIFIED)
               return e
        }
    }

    //============================================================
    // ==== STmicro  cortex-M
    {
        try{
            // Load the vendor script and go from there
            require("stm32-auto.script")
            findSTmicroDevice()
            return ERROR_OK
        }
        catch(e)
        {
            if(e == ERROR_NOTIFIED)
               return e
        }
    }

    //============================================================
    // ==== Siliabs  (Gecko's) cortex-M
    {

        try{
            // Load the vendor script and go from there
            require("silabs-auto.script")
            findSilabsDevice()
            return ERROR_OK
        }
        catch(e)
        {
            if(e == ERROR_NOTIFIED)
               return e
        }
    }


    //============================================================
    // ==== NXP  cortex-M

    // ToDo....
    //    if( nxp)
    //    {
    //        require("nxp-auto.script")
    //        return main();
    //    }


    errorf("Error:\tCan't detect MCU vendor!\n\tIf reset is disabled (\"dr\" option), try with reset.")
    return ERROR_NOTIFIED
}
